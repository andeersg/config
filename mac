#!/bin/sh

# Welcome to the thoughtbot laptop script!
# Be prepared to turn your laptop (or desktop, no haters here)
# into an awesome development machine.

# @TODO Maybe start with copying files from this repo.

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\n$fmt\n" "$@"
}

append_to_bashprofile() {
  local text="$1" bashprofile
  local skip_new_line="${2:-0}"

  if [ -w "$HOME/.bash_profile" ]; then
    bashprofile="$HOME/.bash_profile"
  fi

  if ! grep -Fqs "$text" "$bashprofile"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\n" "$text" >> "$bashprofile"
    else
      printf "\n%s\n" "$text" >> "$bashprofile"
    fi
  fi
}

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.bash_profile" ]; then
  touch "$HOME/.bash_profile"
fi

# shellcheck disable=SC2016
append_to_bashprofile 'export PATH="$HOME/.bin:$PATH"'

HOMEBREW_PREFIX="/usr/local"

if [ -d "$HOMEBREW_PREFIX" ]; then
  if ! [ -r "$HOMEBREW_PREFIX" ]; then
    sudo chown -R "$LOGNAME:admin" /usr/local
  fi
else
  sudo mkdir "$HOMEBREW_PREFIX"
  sudo chflags norestricted "$HOMEBREW_PREFIX"
  sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
fi

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    gem update "$@"
  else
    gem install "$@"
    rbenv rehash
  fi
}

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    append_to_bashprofile '# recommended by brew doctor'

    # shellcheck disable=SC2016
    append_to_bashprofile 'export PATH="/usr/local/bin:$PATH"' 1

    export PATH="/usr/local/bin:$PATH"
fi

if brew list | grep -Fq brew-cask; then
  fancy_echo "Uninstalling old Homebrew-Cask ..."
  brew uninstall --force brew-cask
fi

fancy_echo "Updating Homebrew formulae ..."
brew update
brew bundle --file=- <<EOF
tap "homebrew/services"

# Unix
brew "openssl"
brew "vim"

# Programming languages
brew "libyaml" # should come after openssl
brew "rbenv"
brew "ruby-build"
EOF

fancy_echo "Configuring Ruby ..."
find_latest_ruby() {
  rbenv install -l | grep -v - | tail -1 | sed -e 's/^ *//'
}

ruby_version="$(find_latest_ruby)"
# shellcheck disable=SC2016
append_to_bashprofile 'eval "$(rbenv init - --no-rehash)"' 1
eval "$(rbenv init -)"

if ! rbenv versions | grep -Fq "$ruby_version"; then
  RUBY_CONFIGURE_OPTS=--with-openssl-dir=/usr/local/opt/openssl rbenv install -s "$ruby_version"
fi

rbenv global "$ruby_version"
rbenv shell "$ruby_version"
gem update --system
gem_install_or_update 'bundler'
number_of_cores=$(sysctl -n hw.ncpu)
bundle config --global jobs $((number_of_cores - 1))

if ! command -v nvm >/dev/null; then
  fancy_echo "Configuring NVM (Node.js)"
  curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.6/install.sh | bash

  source ~/.bash_profile
  nvm install 6
fi

# Seems like no harm in running this even if they are installed.
fancy_echo "Add common node packages"
npm install -g yeoman eslint gulp


# Install composer
if ! command -v composer >/dev/null; then
  fancy_echo "Configuring Composer"
  curl -sS https://getcomposer.org/installer | php
  mv composer.phar /usr/local/bin/composer

  export PATH="$HOME/.composer/vendor/bin:$PATH"
  append_to_bashprofile 'export PATH="$HOME/.composer/vendor/bin:$PATH"' 1
fi

if ! command -v phpcs >/dev/null; then
  fancy_echo "Configure PHPCS with Drupal style"
  composer global require drupal/coder
  phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer
fi

if ! command -v drush >/dev/null; then
  fancy_echo "Configuring Drush"
  composer global require drush/drush:dev-master
fi

if ! command -v drupal >/dev/null; then
  fancy_echo "Configuring Drupal console"
  curl https://drupalconsole.com/installer -L -o drupal.phar
  mv drupal.phar /usr/local/bin/drupal
  chmod +x /usr/local/bin/drupal
  drupal init --override
fi

# @TODO Setup the local Drupal PHP environment.



if [ -f "$HOME/.laptop.local" ]; then
  fancy_echo "Running your customizations from ~/.laptop.local ..."
  # shellcheck disable=SC1090
  . "$HOME/.laptop.local"
fi
